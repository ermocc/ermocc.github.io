(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{489:function(e,n,t){"use strict";t.r(n);var s=t(31),r=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Wildcard 通配符")]),e._v("\n<? extends Number> 所有 Number 的子类\n\n通配符可以使用的位置：类型参数、字段、本地变量、返回类型。\n\n通配符不能使用的位置：类型参数用于泛型方法的调用、泛型类实例的创建、超类型。\n\n上界通配符，目的是为了减少对变量的控制。\n\n上界通配符限定为之类型必须为特定类型或者某个类型的子类型。\n\n<? extends Number> ? 是通配符，extends 是关键字，支持类和接口。\n\n无界通配符。List<?>\n"),t("p",[e._v("下界通配符。List<? super Integer>")]),e._v(" "),t("p",[e._v("上下界通配符的使用")]),e._v(" "),t("p",[e._v("通配的嵌套使用。")]),e._v(" "),t("p",[e._v("频繁的set，使用下界通配符 ? super Integer，因为上届通配符不支持set。\n频繁的get，使用上届通配符 ? extends Number，因为下届get出来的是Object，需要强转。")]),e._v(" "),t("p",[e._v("https://www.jianshu.com/p/6e8be0317bcc")])])}),[],!1,null,null,null);n.default=r.exports}}]);