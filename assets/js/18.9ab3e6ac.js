(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{490:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("本文主要讲解面向对象编程的核心三大特性：封装、继承和多态。")])]),t._v(" "),a("h1",{attrs:{id:"面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[t._v("#")]),t._v(" 面向对象")]),t._v(" "),a("p",[t._v("面向对象编程（Object-Oriented Programming）OOP 要和面向过程编程（Procedure-Oriented Programming）POP 比较才能加强记忆。")]),t._v(" "),a("p",[t._v("早期的高级编程语言都是面向过程设计的，比如 C 语言。面向过程的核心是以事件编程，将一个个步骤编写成函数，然后通过控制代码进行顺序执行。")]),t._v(" "),a("p",[t._v("面向对象的程序则是一种以对象为中心的设计思想。将一个个事物设计成相应的对象，每个对象内含有自己的属性和行为，多个对象组成一个功能，从而解决实际问题。大幅度增加代码的可维护性，降低耦合。")]),t._v(" "),a("h2",{attrs:{id:"面向对象的三大特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象的三大特性"}},[t._v("#")]),t._v(" 面向对象的三大特性")]),t._v(" "),a("p",[t._v("（1）封装")]),t._v(" "),a("p",[t._v("封装（Encapsulation），将类的属性私有化（private 修饰符），通过该类提供的方法来访问私有信息。使用者无需关心该类的内部实现细节。")]),t._v(" "),a("p",[t._v("就像用户想吃饭就去找厨师（类），而不需要关心食材、厨具以及厨艺（隐藏的属性）。")]),t._v(" "),a("ul",[a("li",[t._v("隐藏内部实现细节，提高程序安全性")]),t._v(" "),a("li",[t._v("降低耦合：降低程序的修改成本，便于对属性的统一管理与测试")]),t._v(" "),a("li",[t._v("类内部结构可以自由修改")]),t._v(" "),a("li",[t._v("对成员进行精确的控制：通过方法访问成员提高代码灵活度，不只是简单的赋值操作")])]),t._v(" "),a("p",[t._v("下文厨师的这个类中，倘若有用户要吃饭，只需要调用 "),a("code",[t._v("cook()")]),t._v(" 方法，用户并不需要知道 "),a("code",[t._v("age")]),t._v(" 和 "),a("code",[t._v("sick")]),t._v(" 的具体细节。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Chef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" sick"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("sick"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cooking quick ..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cooking hard ..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("（2）继承")]),t._v(" "),a("p",[t._v("Inheritance")]),t._v(" "),a("p",[t._v("只支持单继承，不支持多继承")]),t._v(" "),a("p",[t._v("编程里的继承和现实中的继承不同，父类和子类的关系")]),t._v(" "),a("p",[t._v("继承在内存空间中是怎样的，属性是内存空间的拷贝，方法是")]),t._v(" "),a("p",[t._v("有什么好处，代码的复用")]),t._v(" "),a("p",[t._v("继承和里式替换原则的关系，否和开闭原则。向修改关闭，向扩展开放。")]),t._v(" "),a("p",[t._v("怎么判断继承关系使用的恰当，使用 is-a 关系，男人是人，狗粮是狗，不行。")]),t._v(" "),a("p",[t._v("（3）多态")]),t._v(" "),a("p",[t._v("Polymorphism")]),t._v(" "),a("p",[t._v("一个类可以有多种表现形态。")]),t._v(" "),a("p",[t._v("类 -> 抽象类 -> 接口，用于创建可扩展的程序。")]),t._v(" "),a("p",[t._v("场景")]),t._v(" "),a("p",[t._v("在方法定义传递参数时，应该传父类，实际调用该方法应该传子类")]),t._v(" "),a("p",[t._v("定义方法的返回值，应该用父类定义，方法内部实际返回子类对象。")]),t._v(" "),a("h2",{attrs:{id:"为什么要-getter-和-setter-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要-getter-和-setter-方法"}},[t._v("#")]),t._v(" 为什么要 getter 和 setter 方法")]),t._v(" "),a("h2",{attrs:{id:"this-和-super-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-和-super-的区别"}},[t._v("#")]),t._v(" this 和 super 的区别")]),t._v(" "),a("p",[t._v("面向对象和面向过程的区别")]),t._v(" "),a("p",[t._v("三大特性：继承、多态、封装\nhttps://www.zhihu.com/search?type=content&q=java%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7")]),t._v(" "),a("p",[t._v("封装，为啥要getter和setter\nhttps://www.zhihu.com/question/299087554/answer/513688068\nhttps://blog.csdn.net/weixin_28939637/article/details/114442008")]),t._v(" "),a("p",[t._v("当前对象的应用，相当于一个对象有2个名字\n类中的方法局部变量和成员变量名字相同时，用于区分\n当一个类中有多个构造器，若在一个构造器中调用另一个构造器时，可以在当前构造器中加入 this(...)，必须是第一行")]),t._v(" "),a("p",[t._v("1、父类的一个引用。可以用super.xxx来引用父类的成员。\n2、子类中的成员变量或方法与父类的成员变量或方法重名时，用super.xxx来表示父类的成员。\n3、super（参数）：调用父类中的某一个构造函数(应为构造函数中的第一条语句)。")]),t._v(" "),a("p",[t._v("https://www.cnblogs.com/xiao--liang/p/11484741.html")]),t._v(" "),a("p",[t._v("https://mp.weixin.qq.com/s/vQwrLURf5jjlzeIHnnnVcA")]),t._v(" "),a("p",[t._v("https://pdai.tech/md/java/basic/java-basic-oop.html")]),t._v(" "),a("p",[t._v("aobing\nhttps://mp.weixin.qq.com/s/wm37R4gHK-6tXkCkACH7bg")]),t._v(" "),a("p",[t._v("java oop 基础知识总结\nhttps://blog.csdn.net/weixin_38173324/article/details/70037927")])])}),[],!1,null,null,null);s.default=e.exports}}]);